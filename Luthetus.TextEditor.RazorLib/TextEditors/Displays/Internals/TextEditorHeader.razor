@using Luthetus.TextEditor.RazorLib.TextEditors.Models;
@using Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals;
@using System.Collections.Immutable;
@using Luthetus.TextEditor.RazorLib.TextEditors.Models.TextEditorModels;

<div class="luth_te_text-editor-header @TextEditorService.ThemeCssClassString">
    <div class="luth_te_text-editor-header-listing">
        @{
            var model = TextEditorService.ModelStateWrap.Value;

            if (model is not null)
            {
                var localHeaderButtonKindsList = HeaderButtonKinds;

                if (localHeaderButtonKindsList is null)
                {
                    localHeaderButtonKindsList = Enum
                        .GetValues(typeof(TextEditorHeaderButtonKind))
                        .Cast<TextEditorHeaderButtonKind>()
                        //.Where(x =>
                        //    x != TextEditorHeaderButtonKind.PeekWindowDisplay)
                        .ToImmutableArray();
                }

                foreach (var headerButtonKind in localHeaderButtonKindsList)
                {
                    <div class="luth_te_text-editor-header-entry">
                        @switch (headerButtonKind)
                        {
                            case TextEditorHeaderButtonKind.Cut:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                @onclick="DoCutOnClick">
                                    <IconNote />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.Copy:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                @onclick="DoCopyOnClick">
                                    <IconCopy />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.Paste:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                @onclick="DoPasteOnClick">
                                    <IconClippy />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.Undo:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                        disabled=@GetUndoDisabledAttribute()
                                @onclick="DoUndoOnClick">
                                    <IconArrowLeft />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.Redo:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                        disabled=@GetRedoDisabledAttribute()
                                @onclick="DoRedoOnClick">
                                    <IconArrowRight />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.Save:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                @onclick="DoSaveOnClick">
                                    <IconSave />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.SelectAll:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                @onclick="DoSelectAllOnClick">
                                    <IconListSelection />
                                </button>
                                break;
                            case TextEditorHeaderButtonKind.PeekWindowDisplay:
                                <button title="@headerButtonKind.ToString()"
                                        class="luth_button"
                                @onclick="ShowWatchWindowDisplayDialogOnClick">
                                    <IconProjectDependencies />
                                </button>
                                break;
                        }
                    </div>
                }

                <div class="luth_te_text-editor-header-entry">
                    <button title="Measure editor size"
                            class="luth_button"
                    @onclick="DoRemeasureOnClick">

                        <IconSymbolRuler />
                    </button>
                </div>
            }
            else
            {
                <div class="luth_te_text-editor-header-entry luth_te_text-editor-header-file-sizing">
                    <div>The @nameof(TextEditorModel) was null</div>
                </div>
            }
        }
    </div>
</div>