@using Fluxor.Blazor.Web.Components;
@using Luthetus.Common.RazorLib.Keys.Models;
@using Luthetus.Common.RazorLib.Tabs.Displays
@using Luthetus.TextEditor.RazorLib.FindAlls.Models;

@inherits FluxorComponent

@{
    var findAllState = TextEditorFindAllStateWrap.Value;
}

<div class="luth_te_find-all">
    <div class="luth_te_find-all-body">

		<div class="luth_te_find-all-search-query">
			SearchQuery:&nbsp;
			<input class="luth_ide_input luth_ide_input-text"
				   style="width: 100%;"
				   placeholder="@nameof(SearchQuery)"
				   @bind="SearchQuery"
				   @bind:event="oninput" />
		</div>

		<div class="luth_te_find-all-starting-directory-path">
			StartingDirectoryPath:&nbsp;
			<input class="luth_ide_input luth_ide_input-text"
				   style="width: 100%;"
				   placeholder="@nameof(StartingDirectoryPath)"
				   @bind="StartingDirectoryPath"
				   @bind:event="oninput" />
		</div>

		<button class="luth_button"
                @onclick="() => DoSearchOnClickAsync(findAllState, SearchEngineFileSystem)">
            Find All
        </button>

		@if (SearchEngineFileSystem.IsSearching)
	    {
	        <IconLoading/>
	    }
	    else
	    {
	        <div>Not Searching</div>
	    }
	
		<div class="luth_te_search-engine-file-system-results">

			@{ var localFilePathList = SearchEngineFileSystem.FilePathList.ToArray(); }
			@foreach (var filePath in localFilePathList)
			{
				var absolutePath = EnvironmentProvider.AbsolutePathFactory(filePath, false);

				<div>
					<label>Open in editor:</label>
					<button class="luth_button"
							style="display: inline; margin-bottom: 15px;"
							title="@absolutePath.Value"
							@onclick="() => OpenInEditorOnClick(filePath)">
						@absolutePath.NameWithExtension
					</button>
				</div>
			}
		</div>
    </div>
</div>