@using Fluxor.Blazor.Web.Components
@using Luthetus.Common.RazorLib.Contexts.Models;

@inherits FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.ActiveContextsContext"
                 ClassCssString="luth_ide_active-contexts"
                 StyleCssString="height: 100%">

    @{ var contextState = ContextStateWrap.Value; }

    <div class="luth_ide_section-title">

        @{ var isInspecting = GetIsInspecting(contextState); }

        <button class="luth_button"
                style="display: inline;"
                @onclick="() => DispatchToggleInspectActionOnClick(isInspecting)">

            @if (isInspecting)
            {
                <IconLock />
            }
            else
            {
                <IconInspect />
            }
        </button>

        ActiveContextsDisplay
    </div>

    <div class="luth_ide_section-body">

        @{
            var contextKeysToRender = contextState.InspectedContextHeirarchy
                ?? contextState.FocusedContextHeirarchy;
        }

        @foreach (var contextKey in contextKeysToRender.KeyList)
        {
            <ContextDisplay @key="contextKey"
                            ContextKey="contextKey" />
            <hr />
        }
    </div>
</ContextBoundary>
